/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.net.*;
import java.util.zip.*;

boolean result = true;

try
{
    System.out.println( "Creating java.io.File." );
    
    File assemblyFile = new File( basedir, "assembly/target/assembly-1.0-SNAPSHOT-bin.zip" );
    
    System.out.println( "Checking for existence and file-ishness of: " + assemblyFile );
    
    if ( !assemblyFile.exists() || assemblyFile.isDirectory() )
    {
        System.err.println( "assembly file is missing or a directory." );
        return false;
    }
    
    System.out.println( "Creating ZipFile instance." );
    
    ZipFile assemblyZip = new ZipFile( assemblyFile );
    
    System.out.println( "Looking for 'lib/prefix-suffix/junit-3.8.1.jar' jar entry." );
    
    if ( assemblyZip.getEntry( "lib/prefix-suffix/junit-3.8.1.jar" ) == null )
    {
        System.err.println( "lib/prefix-suffix/junit-3.8.1.jar entry is missing." );
        result = false;
    }
    
    System.out.println( "Looking for absence of 'lib/prefix/junit-3.8.1.jar' jar entry." );
    
    if ( assemblyZip.getEntry( "lib/prefix/junit-3.8.1.jar" ) != null )
    {
        System.err.println( "lib/prefix/junit-3.8.1.jar should not be present." );
        result = false;
    }
    
}
catch( IOException e )
{
    e.printStackTrace();
    result = false;
}

return result;
